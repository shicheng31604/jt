<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/rabbit
	http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

	<!-- 定义RabbitMQ的连接工厂 -->
	<rabbit:connection-factory id="connectionFactory"
		host="${rabbit.ip}" port="${rabbit.port}" username="${rabbit.username}" password="${rabbit.password}"
		virtual-host="${rabbit.vhost}" />

	<!-- MQ的管理，包括队列、交换器等 -->
	<rabbit:admin connection-factory="connectionFactory" />
	
	<!-- 定义消息队列 -->
	<rabbit:queue name="jt-order-Queue" auto-declare="true"/>
	
	<!-- 定义交换机，并且完成队列和交换机的绑定 -->
						<!-- 接收端的交换机名字要和发送者的交换机名字一样 -->
	<rabbit:direct-exchange name="OrderDirectExchange" auto-declare="true">
		<rabbit:bindings>
			<!-- 前台系统只接收商品更新的消息，key路由key -->
			<rabbit:binding queue="jt-order-Queue" key="shicheng.send"/>
		</rabbit:bindings>
	</rabbit:direct-exchange>
	
	<!-- 定义监听 ,就相当于是让消费者的线程不结束,一致保持工作状态,一有消息,就消费-->
	<rabbit:listener-container connection-factory="connectionFactory">
		<!-- 监听一个队列，当队列中有消息，就会自动触发类.方法，传递消息就作为方法的参数，根据方法声明的参数强转 -->
		<rabbit:listener ref="rabbitOrderService" method="create" queue-names="jt-order-Queue"/>
	</rabbit:listener-container>
	
	
	<!-- 这个类,就是接受消息和处理的类 ,该类的create方法,被监听着,一旦队列有合适的消息,就会拿到这个方法里面来-->
	<bean id="rabbitOrderService" class="com.jt.order.mq.service.RabbitOrderService"></bean>

</beans>